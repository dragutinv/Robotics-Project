<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="main.kernel_derivation" fileName="/INTmeanShift/src/main/kernel_derivation.cal"
    lineNumber="37">
  <actions>
    <body lineNumber="46" name="kernelDerivation">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.7/@target"
          lineNumber="48" name="euclideanDistance" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@target"
          lineNumber="49" name="tmpX" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@value/@e1/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@value/@e1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@target"
          lineNumber="50" name="tmpY" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@value/@e2/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@value/@e2/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@target"
          lineNumber="51" name="tmp" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.5/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.1/@blocks.2/@instructions.0/@target"
          name="x" uses="#//@actions.0/@body/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@value/@e1/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.2/@indexes.0/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.2/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.0/@target"
          name="local_HALF_X" uses="#//@actions.0/@body/@blocks.0/@instructions.1/@value/@expr/@use #//@actions.0/@body/@blocks.1/@condition/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@value/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.0/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.2/@indexes.0/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.2/@instructions.0/@target"
          name="y" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@value/@e1/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.1/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.2/@indexes.1/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.2/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.1/@target"
          name="local_HALF_Y" uses="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.1/@value/@expr/@use #//@actions.0/@body/@blocks.1/@blocks.1/@condition/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@value/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.2/@indexes.1/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.2/@indexes.1/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.6/@target"
          name="local_sqrtValue" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.7/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="../std/header/Parameter.ir#//@constants.6"/>
          <target variable="#//@actions.0/@body/@locals.5"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="53">
          <target variable="#//@actions.0/@body/@locals.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.5"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="17"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="../std/header/Parameter.ir#//@constants.6"/>
          <target variable="#//@actions.0/@body/@locals.5"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="53">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.4"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.5"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="../std/header/Parameter.ir#//@constants.7"/>
            <target variable="#//@actions.0/@body/@locals.7"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="54">
            <target variable="#//@actions.0/@body/@locals.6"/>
            <value xsi:type="net.sf.orcc.ir:ExprUnary" op="MINUS">
              <expr xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.7"/>
              </expr>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="17"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="../std/header/Parameter.ir#//@constants.7"/>
            <target variable="#//@actions.0/@body/@locals.7"/>
          </instructions>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="54">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.6"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.7"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="../std/header/Parameter.ir#//@constants.6"/>
              <target variable="#//@actions.0/@body/@locals.5"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="55">
              <target variable="#//@actions.0/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="DIV">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="100">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="39"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.5"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="39"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="../std/header/Parameter.ir#//@constants.7"/>
              <target variable="#//@actions.0/@body/@locals.7"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="56">
              <target variable="#//@actions.0/@body/@locals.2"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="DIV">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.6"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="100">
                    <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="39"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.7"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="39"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="57">
              <target variable="#//@actions.0/@body/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.1"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.1"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="64"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.2"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.2"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="64"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="65"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="58" procedure="#//@procs.0">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.3"/>
                </value>
              </arguments>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad">
              <source variable="#//@stateVars.3"/>
              <target variable="#//@actions.0/@body/@locals.8"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="59">
              <target variable="#//@actions.0/@body/@locals.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.8"/>
              </value>
            </instructions>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="61">
            <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="100">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="7"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </condition>
            <elseBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="../std/header/Parameter.ir#//@constants.6"/>
                <target variable="#//@actions.0/@body/@locals.5"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="../std/header/Parameter.ir#//@constants.7"/>
                <target variable="#//@actions.0/@body/@locals.7"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="64">
                <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.5"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.6"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.7"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </indexes>
                <target variable="#//@stateVars.0"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
            </elseBlocks>
            <joinBlock/>
            <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="../std/header/Parameter.ir#//@constants.6"/>
                <target variable="#//@actions.0/@body/@locals.5"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstLoad">
                <source variable="../std/header/Parameter.ir#//@constants.7"/>
                <target variable="#//@actions.0/@body/@locals.7"/>
              </instructions>
              <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="62">
                <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.4"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.5"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </indexes>
                <indexes xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                  <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.6"/>
                  </e1>
                  <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                    <use variable="#//@actions.0/@body/@locals.7"/>
                  </e2>
                  <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
                </indexes>
                <target variable="#//@stateVars.0"/>
                <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </value>
              </instructions>
            </thenBlocks>
          </blocks>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="54">
              <target variable="#//@actions.0/@body/@locals.6"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.6"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt"/>
              </value>
            </instructions>
          </blocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="53">
            <target variable="#//@actions.0/@body/@locals.4"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.4"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="46" name="isSchedulable_kernelDerivation">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>kernelDerivation</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="73" name="sendData">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.2/@target"
          lineNumber="75" name="Out" uses="#//@actions.1/@body/@blocks.4/@instructions.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target #//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@actions.1/@body/@blocks.2/@instructions.0/@target"
          name="local_xCount" uses="#//@actions.1/@body/@blocks.0/@instructions.2/@indexes.0/@use #//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.1/@value/@e1/@use #//@actions.1/@body/@blocks.3/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target #//@actions.1/@body/@blocks.0/@instructions.3/@target #//@actions.1/@body/@blocks.0/@instructions.5/@target"
          name="local_yCount" uses="#//@actions.1/@body/@blocks.0/@instructions.2/@indexes.1/@use #//@actions.1/@body/@blocks.0/@instructions.4/@value/@e1/@use #//@actions.1/@body/@blocks.1/@condition/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.6/@target"
          name="local_Y_SIZE" uses="#//@actions.1/@body/@blocks.1/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="16"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.1/@target"
          name="local_X_SIZE" uses="#//@actions.1/@body/@blocks.3/@condition/@e2/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="16"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.1/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.1/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="77">
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.1"/>
          </indexes>
          <indexes xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.2"/>
          </indexes>
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.1/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="79">
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.1/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="../std/header/Parameter.ir#//@constants.9"/>
          <target variable="#//@actions.1/@body/@locals.3"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="81">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.2"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.3"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.1/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="82">
            <target variable="#//@stateVars.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="83">
            <target variable="#//@stateVars.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.1/@body/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="../std/header/Parameter.ir#//@constants.8"/>
          <target variable="#//@actions.1/@body/@locals.4"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="86">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.1"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.4"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="87">
            <target variable="#//@stateVars.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="88">
            <target variable="#//@stateVars.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="73">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <target variable="#//@actions.1/@outputPattern/@variables.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern ports="#//@outputs.0">
      <numTokensMap key="#//@outputs.0" value="1"/>
      <portToVarMap key="#//@outputs.0" value="#//@actions.1/@outputPattern/@variables.0"/>
      <variables assignable="true" defs="#//@actions.1/@body/@blocks.4/@instructions.0/@target"
          lineNumber="73" name="kDervO">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeInt"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@outputPattern/@variables.0" value="#//@outputs.0"/>
    </outputPattern>
    <peekPattern/>
    <scheduler lineNumber="73" name="isSchedulable_sendData">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>sendData</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.0">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.1"
        actions="#//@actions.1"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="s0" outgoing="#//@fsm/@edges.0"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="s1" incoming="#//@fsm/@edges.0 #//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.1"/>
  </fsm>
  <outputs label="kDervO">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </outputs>
  <procs lineNumber="97" name="sqrt">
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.0/@target #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.0/@target"
        lineNumber="99" name="pSq" uses="#//@procs.0/@blocks.1/@blocks.1/@condition/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.1/@target #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.1/@target"
        lineNumber="100" name="N" uses="#//@procs.0/@blocks.2/@instructions.0/@value/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.2/@target #//@procs.0/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.0/@target #//@procs.0/@blocks.1/@blocks.2/@instructions.1/@target"
        lineNumber="101" name="i" uses="#//@procs.0/@blocks.1/@condition/@e1/@use #//@procs.0/@blocks.1/@blocks.0/@condition/@e2/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@condition/@e2/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.0/@value/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.2/@value/@use #//@procs.0/@blocks.1/@blocks.2/@instructions.1/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <locals assignable="true" defs="#//@procs.0/@blocks.0/@instructions.3/@target #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.2/@target #//@procs.0/@blocks.1/@blocks.0/@blocks.1/@instructions.0/@target #//@procs.0/@blocks.1/@blocks.2/@instructions.0/@target"
        lineNumber="102" name="j" uses="#//@procs.0/@blocks.1/@blocks.0/@condition/@e1/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@condition/@e1/@e1/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@condition/@e1/@e2/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.0/@thenBlocks.0/@instructions.1/@value/@use #//@procs.0/@blocks.1/@blocks.0/@blocks.1/@instructions.0/@value/@e1/@use">
      <type xsi:type="net.sf.orcc.ir:TypeInt"/>
    </locals>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="99">
        <target variable="#//@procs.0/@locals.0"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="100">
        <target variable="#//@procs.0/@locals.1"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="101">
        <target variable="#//@procs.0/@locals.2"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@parameters.0/@variable"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="102">
        <target variable="#//@procs.0/@locals.3"/>
        <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </value>
      </instructions>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="104">
      <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
        <e1 xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@locals.2"/>
        </e1>
        <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
        </e2>
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </condition>
      <joinBlock/>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="105">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.3"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="106">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="EQ">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="TIMES">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.3"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="64"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@locals.2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="107">
              <target variable="#//@procs.0/@locals.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.2"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="108">
              <target variable="#//@procs.0/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.3"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="109">
              <target variable="#//@procs.0/@locals.3"/>
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.2"/>
              </value>
            </instructions>
          </thenBlocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="111">
            <target variable="#//@procs.0/@locals.3"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@procs.0/@locals.3"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="114">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="GT">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@procs.0/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="115">
            <target variable="#//@procs.0/@locals.2"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="118">
          <target variable="#//@procs.0/@locals.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="119">
          <target variable="#//@procs.0/@locals.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@procs.0/@locals.2"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt"/>
          </value>
        </instructions>
      </blocks>
    </blocks>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="122">
        <target variable="#//@stateVars.3"/>
        <value xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@procs.0/@locals.1"/>
        </value>
      </instructions>
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="97" name="num" uses="#//@procs.0/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@thenBlocks.0/@instructions.2/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.1/@elseBlocks.0/@instructions.2/@target"
      lineNumber="39" name="kArray" uses="#//@actions.1/@body/@blocks.0/@instructions.2/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="21">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeList">
        <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="27">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="5"/>
        </sizeExpr>
        <type xsi:type="net.sf.orcc.ir:TypeInt"/>
      </type>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.1/@body/@blocks.3/@thenBlocks.0/@instructions.0/@target"
      lineNumber="40" name="xCount" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source #//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.0/@source #//@actions.1/@body/@blocks.2/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.4/@target #//@actions.1/@body/@blocks.1/@thenBlocks.0/@instructions.2/@target #//@actions.1/@body/@blocks.3/@thenBlocks.0/@instructions.1/@target"
      lineNumber="41" name="yCount" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@source #//@actions.1/@body/@blocks.0/@instructions.3/@source #//@actions.1/@body/@blocks.0/@instructions.5/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@procs.0/@blocks.2/@instructions.0/@target"
      lineNumber="124" name="sqrtValue" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.6/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt"/>
  </stateVars>
</net.sf.orcc.df:Actor>
